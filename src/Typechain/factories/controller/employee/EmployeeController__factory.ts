/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  EmployeeController,
  EmployeeControllerInterface,
} from "../../../controller/employee/EmployeeController";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "listEmployeeAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "listEmployeeSkillAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "listEmployeeApplyAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
    ],
    name: "_checkApplyIdBelongsToEmployeeId",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "postId",
        type: "string",
      },
    ],
    name: "_checkExistApply",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_checkExistEmployeeAccount",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
    ],
    name: "_checkExistSkill",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "postId",
        type: "string",
      },
    ],
    name: "_checkIdBelongsToPostId",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "category",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "phone",
        type: "string",
      },
      {
        internalType: "string",
        name: "professional",
        type: "string",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
      {
        internalType: "string",
        name: "github",
        type: "string",
      },
      {
        internalType: "string",
        name: "linkedin",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceImage",
        type: "string",
      },
    ],
    name: "addEmployee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "addSkill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "businessId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "postId",
        type: "string",
      },
    ],
    name: "applyPost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "destroy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "skillId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "editSkill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllProfile",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "category",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "phone",
            type: "string",
          },
          {
            internalType: "string",
            name: "professional",
            type: "string",
          },
          {
            internalType: "string",
            name: "email",
            type: "string",
          },
          {
            internalType: "string",
            name: "github",
            type: "string",
          },
          {
            internalType: "string",
            name: "linkedin",
            type: "string",
          },
          {
            internalType: "string",
            name: "sourceImage",
            type: "string",
          },
        ],
        internalType: "struct Profile[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllSkill",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "level",
            type: "uint256",
          },
        ],
        internalType: "struct EmployeeSkill[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getProfile",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "category",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "phone",
            type: "string",
          },
          {
            internalType: "string",
            name: "professional",
            type: "string",
          },
          {
            internalType: "string",
            name: "email",
            type: "string",
          },
          {
            internalType: "string",
            name: "github",
            type: "string",
          },
          {
            internalType: "string",
            name: "linkedin",
            type: "string",
          },
          {
            internalType: "string",
            name: "sourceImage",
            type: "string",
          },
        ],
        internalType: "struct Profile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c6c38038062001c6c83398101604081905262000034916200009f565b60008054336001600160a01b0319918216179091556001805482166001600160a01b0395861617905560028054821693851693909317909255600380549092169216919091179055620000e9565b80516001600160a01b03811681146200009a57600080fd5b919050565b600080600060608486031215620000b557600080fd5b620000c08462000082565b9250620000d06020850162000082565b9150620000e06040850162000082565b90509250925092565b611b7380620000f96000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063ec40a59b11610066578063ec40a59b146101e7578063f08f4f64146101ef578063f2fde38b1461020f578063f3d271861461022257600080fd5b80638da5cb5b14610191578063b08026ea146101ac578063c1fa897d146101c1578063e583267d146101d457600080fd5b806364f3fe9d116100d357806364f3fe9d146101405780637be69569146101635780637df65cc61461017657806383197ef01461018957600080fd5b80631fe1d463146100fa5780633901d42d1461010f57806355a7608b1461012d575b600080fd5b61010d610108366004610f6c565b610235565b005b610117610381565b60405161012491906110f9565b60405180910390f35b61010d61013b36600461115b565b6103ff565b61015361014e3660046111aa565b61051e565b6040519015158152602001610124565b61010d6101713660046111cc565b6105b7565b6101536101843660046112f0565b6106dc565b61010d610777565b6000546040516001600160a01b039091168152602001610124565b6101b4610782565b6040516101249190611373565b6101536101cf3660046112f0565b6107fb565b61010d6101e23660046113c8565b610888565b6101536109ad565b6102026101fd3660046113f4565b610a39565b604051610124919061140d565b61010d61021d366004611435565b610b09565b6101536102303660046112f0565b610b82565b8261023e6109ad565b6102635760405162461bcd60e51b815260040161025a90611452565b60405180910390fd5b61026c81610c7f565b6102885760405162461bcd60e51b815260040161025a90611497565b838361029482826107fb565b156102f65760405162461bcd60e51b815260206004820152602c60248201527f456d706c6f79656520536b696c6c20437572736f723a20616c7265616479206560448201526b1e1a5cdd1959081cdada5b1b60a21b606482015260840161025a565b60408051608081018252878152600060208201528082018790526060810186905260025491516331dd135b60e11b815290916001600160a01b0316906363ba26b6906103469084906004016114e6565b600060405180830381600087803b15801561036057600080fd5b505af1158015610374573d6000803e3d6000fd5b5050505050505050505050565b60606103956001546001600160a01b031690565b6001600160a01b03166353ed51436040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103d2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103fa91908101906116ca565b905090565b826104086109ad565b6104245760405162461bcd60e51b815260040161025a90611452565b61042d81610c7f565b6104495760405162461bcd60e51b815260040161025a90611497565b83826104558282610b82565b156104ae5760405162461bcd60e51b8152602060048201526024808201527f4c697374427573696e6573734170706c79437572736f723a20686164206170706044820152631b1a595960e21b606482015260840161025a565b60006040518060c0016040528060008152602001888152602001878152602001868152602001428152602001600081525090506104f36003546001600160a01b031690565b6001600160a01b0316632e6de701826040518263ffffffff1660e01b8152600401610346919061177a565b600354604051630e0886f960e41b81526004810184905260009182916001600160a01b039091169063e0886f9090602401600060405180830381865afa15801561056c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610594919081019061186a565b6020015190508083036105ab5760019150506105b1565b60009150505b92915050565b6105bf6109ad565b156106205760405162461bcd60e51b815260206004820152602b60248201527f4c697374456d706c6f796565437572736f723a20616c7265616479206578697360448201526a1d1959081858d8dbdd5b9d60aa1b606482015260840161025a565b60408051610140810182528981526000602082015233818301819052606082018a90526080820189905260a0820188905260c0820187905260e0820186905261010082018590526101208201849052600154925163057f4d7960e01b815290926001600160a01b03169063057f4d799061069e90849060040161140d565b600060405180830381600087803b1580156106b857600080fd5b505af11580156106cc573d6000803e3d6000fd5b5050505050505050505050505050565b600354604051630e0886f960e41b81526004810184905260009182916001600160a01b039091169063e0886f9090602401600060405180830381865afa15801561072a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610752919081019061186a565b60600151905080805190602001208380519060200120036105ab5760019150506105b1565b61077f610d0c565b30ff5b60606107966002546001600160a01b031690565b6001600160a01b03166353ed51436040518163ffffffff1660e01b8152600401600060405180830381865afa1580156107d3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103fa9190810190611920565b60025460405163025f547760e41b815260009182916001600160a01b03909116906325f547709061083290879087906004016119c3565b602060405180830381865afa15801561084f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087391906119dc565b905060001981146105ab5760019150506105b1565b826108916109ad565b6108ad5760405162461bcd60e51b815260040161025a90611452565b6108b681610c7f565b6108d25760405162461bcd60e51b815260040161025a90611497565b82846108de8282610d77565b6109365760405162461bcd60e51b8152602060048201526024808201527f456d706c6f79656520536b696c6c20437572736f723a207265717565737420736044820152631ada5b1b60e21b606482015260840161025a565b6002546001600160a01b03166040516338549d9b60e11b815260048101879052602481018690526001600160a01b0391909116906370a93b3690604401600060405180830381600087803b15801561098d57600080fd5b505af11580156109a1573d6000803e3d6000fd5b50505050505050505050565b600154604051630689388760e41b815233600482015260009182916001600160a01b0390911690636893887090602401602060405180830381865afa1580156109fa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1e91906119dc565b90506000198103610a3157600091505090565b600191505090565b610a98604051806101400160405280600081526020016000815260200160006001600160a01b03168152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b600154604051630e0886f960e41b8152600481018490526001600160a01b039091169063e0886f9090602401600060405180830381865afa158015610ae1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105b191908101906119f5565b610b11610d0c565b6001600160a01b038116610b765760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161025a565b610b7f81610e04565b50565b600080600360009054906101000a90046001600160a01b03166001600160a01b03166353ed51436040518163ffffffff1660e01b8152600401600060405180830381865afa158015610bd8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c009190810190611a29565b905060005b8151811015610c74576000828281518110610c2257610c22611acc565b60200260200101519050858160200151148015610c5057508480519060200120816060015180519060200120145b15610c6157600193505050506105b1565b5080610c6c81611ae2565b915050610c05565b506000949350505050565b600154604051630e0886f960e41b81526004810183905260009182916001600160a01b039091169063e0886f9090602401600060405180830381865afa158015610ccd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cf591908101906119f5565b9050610d05816040015133610e54565b9392505050565b33610d1f6000546001600160a01b031690565b6001600160a01b031614610d755760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161025a565b565b600254604051630e0886f960e41b81526004810184905260009182916001600160a01b039091169063e0886f9090602401600060405180830381865afa158015610dc5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ded9190810190611b09565b6020015190508281036105ab5760019150506105b1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000816001600160a01b0316836001600160a01b031603610e77575060016105b1565b50600092915050565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715610eb957610eb9610e80565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610ee757610ee7610e80565b604052919050565b60006001600160401b03821115610f0857610f08610e80565b50601f01601f191660200190565b600082601f830112610f2757600080fd5b8135610f3a610f3582610eef565b610ebf565b818152846020838601011115610f4f57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215610f8157600080fd5b8335925060208401356001600160401b03811115610f9e57600080fd5b610faa86828701610f16565b925050604084013590509250925092565b60005b83811015610fd6578181015183820152602001610fbe565b50506000910152565b60008151808452610ff7816020860160208601610fbb565b601f01601f19169290920160200192915050565b60006101408251845260208301516020850152604083015161103860408601826001600160a01b03169052565b50606083015181606086015261105082860182610fdf565b9150506080830151848203608086015261106a8282610fdf565b91505060a083015184820360a08601526110848282610fdf565b91505060c083015184820360c086015261109e8282610fdf565b91505060e083015184820360e08601526110b88282610fdf565b91505061010080840151858303828701526110d38382610fdf565b9250505061012080840151858303828701526110ef8382610fdf565b9695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561114e57603f1988860301845261113c85835161100b565b94509285019290850190600101611120565b5092979650505050505050565b60008060006060848603121561117057600080fd5b833592506020840135915060408401356001600160401b0381111561119457600080fd5b6111a086828701610f16565b9150509250925092565b600080604083850312156111bd57600080fd5b50508035926020909101359150565b600080600080600080600080610100898b0312156111e957600080fd5b8835975060208901356001600160401b038082111561120757600080fd5b6112138c838d01610f16565b985060408b013591508082111561122957600080fd5b6112358c838d01610f16565b975060608b013591508082111561124b57600080fd5b6112578c838d01610f16565b965060808b013591508082111561126d57600080fd5b6112798c838d01610f16565b955060a08b013591508082111561128f57600080fd5b61129b8c838d01610f16565b945060c08b01359150808211156112b157600080fd5b6112bd8c838d01610f16565b935060e08b01359150808211156112d357600080fd5b506112e08b828c01610f16565b9150509295985092959890939650565b6000806040838503121561130357600080fd5b8235915060208301356001600160401b0381111561132057600080fd5b61132c85828601610f16565b9150509250929050565b8051825260208101516020830152600060408201516080604085015261135f6080850182610fdf565b606093840151949093019390935250919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561114e57603f198886030184526113b6858351611336565b9450928501929085019060010161139a565b6000806000606084860312156113dd57600080fd5b505081359360208301359350604090920135919050565b60006020828403121561140657600080fd5b5035919050565b602081526000610d05602083018461100b565b6001600160a01b0381168114610b7f57600080fd5b60006020828403121561144757600080fd5b8135610d0581611420565b60208082526025908201527f4c697374456d706c6f796565437572736f723a206e6f7420657869737420616360408201526418dbdd5b9d60da1b606082015260800190565b6020808252602f908201527f4c697374456d706c6f796565437572736f723a206964206973206e6f7420626560408201526e6c6f6e6720746f206164647265737360881b606082015260800190565b602081526000610d056020830184611336565b60006001600160401b0382111561151257611512610e80565b5060051b60200190565b805161152781611420565b919050565b600082601f83011261153d57600080fd5b815161154b610f3582610eef565b81815284602083860101111561156057600080fd5b611571826020830160208701610fbb565b949350505050565b6000610140828403121561158c57600080fd5b611594610e96565b905081518152602082015160208201526115b06040830161151c565b604082015260608201516001600160401b03808211156115cf57600080fd5b6115db8583860161152c565b606084015260808401519150808211156115f457600080fd5b6116008583860161152c565b608084015260a084015191508082111561161957600080fd5b6116258583860161152c565b60a084015260c084015191508082111561163e57600080fd5b61164a8583860161152c565b60c084015260e084015191508082111561166357600080fd5b61166f8583860161152c565b60e08401526101009150818401518181111561168a57600080fd5b6116968682870161152c565b8385015250610120915081840151818111156116b157600080fd5b6116bd8682870161152c565b8385015250505092915050565b600060208083850312156116dd57600080fd5b82516001600160401b03808211156116f457600080fd5b818501915085601f83011261170857600080fd5b8151611716610f35826114f9565b81815260059190911b8301840190848101908883111561173557600080fd5b8585015b8381101561176d578051858111156117515760008081fd5b61175f8b89838a0101611579565b845250918601918601611739565b5098975050505050505050565b602081528151602082015260208201516040820152604082015160608201526000606083015160c060808401526117b460e0840182610fdf565b9050608084015160a084015260a084015160c08401528091505092915050565b600060c082840312156117e657600080fd5b60405160c081016001600160401b03828210818311171561180957611809610e80565b81604052829350845183526020850151602084015260408501516040840152606085015191508082111561183c57600080fd5b506118498582860161152c565b6060830152506080830151608082015260a083015160a08201525092915050565b60006020828403121561187c57600080fd5b81516001600160401b0381111561189257600080fd5b611571848285016117d4565b6000608082840312156118b057600080fd5b604051608081016001600160401b0382821081831117156118d3576118d3610e80565b81604052829350845183526020850151602084015260408501519150808211156118fc57600080fd5b506119098582860161152c565b604083015250606083015160608201525092915050565b6000602080838503121561193357600080fd5b82516001600160401b038082111561194a57600080fd5b818501915085601f83011261195e57600080fd5b815161196c610f35826114f9565b81815260059190911b8301840190848101908883111561198b57600080fd5b8585015b8381101561176d578051858111156119a75760008081fd5b6119b58b89838a010161189e565b84525091860191860161198f565b8281526040602082015260006115716040830184610fdf565b6000602082840312156119ee57600080fd5b5051919050565b600060208284031215611a0757600080fd5b81516001600160401b03811115611a1d57600080fd5b61157184828501611579565b60006020808385031215611a3c57600080fd5b82516001600160401b0380821115611a5357600080fd5b818501915085601f830112611a6757600080fd5b8151611a75610f35826114f9565b81815260059190911b83018401908481019088831115611a9457600080fd5b8585015b8381101561176d57805185811115611ab05760008081fd5b611abe8b89838a01016117d4565b845250918601918601611a98565b634e487b7160e01b600052603260045260246000fd5b600060018201611b0257634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215611b1b57600080fd5b81516001600160401b03811115611b3157600080fd5b6115718482850161189e56fea264697066735822122060af0bc93410092dc433a14dd867f421b083f4340b77258661fec981cf4a35bb64736f6c63430008110033";

type EmployeeControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EmployeeControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EmployeeController__factory extends ContractFactory {
  constructor(...args: EmployeeControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    listEmployeeAddress: PromiseOrValue<string>,
    listEmployeeSkillAddress: PromiseOrValue<string>,
    listEmployeeApplyAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EmployeeController> {
    return super.deploy(
      listEmployeeAddress,
      listEmployeeSkillAddress,
      listEmployeeApplyAddress,
      overrides || {}
    ) as Promise<EmployeeController>;
  }
  override getDeployTransaction(
    listEmployeeAddress: PromiseOrValue<string>,
    listEmployeeSkillAddress: PromiseOrValue<string>,
    listEmployeeApplyAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      listEmployeeAddress,
      listEmployeeSkillAddress,
      listEmployeeApplyAddress,
      overrides || {}
    );
  }
  override attach(address: string): EmployeeController {
    return super.attach(address) as EmployeeController;
  }
  override connect(signer: Signer): EmployeeController__factory {
    return super.connect(signer) as EmployeeController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EmployeeControllerInterface {
    return new utils.Interface(_abi) as EmployeeControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EmployeeController {
    return new Contract(address, _abi, signerOrProvider) as EmployeeController;
  }
}
