/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BusinessController,
  BusinessControllerInterface,
} from "../../../controller/business/BusinessController";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "listBusinessAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "listBusinessApplyAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
    ],
    name: "_checkApplyIdBelongsToEmployeeId",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "postId",
        type: "string",
      },
    ],
    name: "_checkExistApply",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_checkExistBusinessAccount",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "postId",
        type: "string",
      },
    ],
    name: "_checkIdBelongsToPostId",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "category",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "phone",
        type: "string",
      },
      {
        internalType: "string",
        name: "professional",
        type: "string",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
      {
        internalType: "string",
        name: "github",
        type: "string",
      },
      {
        internalType: "string",
        name: "linkedin",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceImage",
        type: "string",
      },
    ],
    name: "addBusiness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "destroy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllApplies",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "postId",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "status",
            type: "uint256",
          },
        ],
        internalType: "struct BusinessApply[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllProfile",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "category",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "phone",
            type: "string",
          },
          {
            internalType: "string",
            name: "professional",
            type: "string",
          },
          {
            internalType: "string",
            name: "email",
            type: "string",
          },
          {
            internalType: "string",
            name: "github",
            type: "string",
          },
          {
            internalType: "string",
            name: "linkedin",
            type: "string",
          },
          {
            internalType: "string",
            name: "sourceImage",
            type: "string",
          },
        ],
        internalType: "struct Profile[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getProfile",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "category",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "phone",
            type: "string",
          },
          {
            internalType: "string",
            name: "professional",
            type: "string",
          },
          {
            internalType: "string",
            name: "email",
            type: "string",
          },
          {
            internalType: "string",
            name: "github",
            type: "string",
          },
          {
            internalType: "string",
            name: "linkedin",
            type: "string",
          },
          {
            internalType: "string",
            name: "sourceImage",
            type: "string",
          },
        ],
        internalType: "struct Profile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161132a38038061132a83398101604081905261002f91610087565b60008054336001600160a01b0319918216179091556001805482166001600160a01b0394851617905560028054909116919092161790556100ba565b80516001600160a01b038116811461008257600080fd5b919050565b6000806040838503121561009a57600080fd5b6100a38361006b565b91506100b16020840161006b565b90509250929050565b611261806100c96000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b14610121578063d610b45a1461013c578063f08f4f6414610144578063f2fde38b14610164578063f3d2718614610177578063f54e09dc1461018a57600080fd5b80633901d42d146100ae5780633dba3523146100cc57806364f3fe9d146100e15780637df65cc61461010457806383197ef014610117575b600080fd5b6100b661019d565b6040516100c391906109c8565b60405180910390f35b6100d461021b565b6040516100c39190610a2a565b6100f46100ef366004610aca565b610294565b60405190151581526020016100c3565b6100f4610112366004610bdb565b61032d565b61011f6103c8565b005b6000546040516001600160a01b0390911681526020016100c3565b6100f46103d3565b610157610152366004610c22565b61045f565b6040516100c39190610c3b565b61011f610172366004610c6a565b61052f565b6100f4610185366004610bdb565b6105ad565b61011f610198366004610c87565b6106aa565b60606101b16001546001600160a01b031690565b6001600160a01b03166353ed51436040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101ee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102169190810190610f7f565b905090565b606061022f6002546001600160a01b031690565b6001600160a01b03166353ed51436040518163ffffffff1660e01b8152600401600060405180830381865afa15801561026c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261021691908101906110c7565b600254604051630e0886f960e41b81526004810184905260009182916001600160a01b039091169063e0886f9090602401600060405180830381865afa1580156102e2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261030a919081019061116b565b602001519050808303610321576001915050610327565b60009150505b92915050565b600254604051630e0886f960e41b81526004810184905260009182916001600160a01b039091169063e0886f9090602401600060405180830381865afa15801561037b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103a3919081019061116b565b6060015190508080519060200120838051906020012003610321576001915050610327565b6103d06107cf565b30ff5b600154604051630689388760e41b815233600482015260009182916001600160a01b0390911690636893887090602401602060405180830381865afa158015610420573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044491906111a0565b9050600019810361045757600091505090565b600191505090565b6104be604051806101400160405280600081526020016000815260200160006001600160a01b03168152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b600154604051630e0886f960e41b8152600481018490526001600160a01b039091169063e0886f9090602401600060405180830381865afa158015610507573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261032791908101906111b9565b6105376107cf565b6001600160a01b0381166105a15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6105aa8161083a565b50565b600080600260009054906101000a90046001600160a01b03166001600160a01b03166353ed51436040518163ffffffff1660e01b8152600401600060405180830381865afa158015610603573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261062b91908101906110c7565b905060005b815181101561069f57600082828151811061064d5761064d6111ee565b6020026020010151905085816020015114801561067b57508480519060200120816060015180519060200120145b1561068c5760019350505050610327565b508061069781611204565b915050610630565b506000949350505050565b6106b26103d3565b156107135760405162461bcd60e51b815260206004820152602b60248201527f4c697374427573696e657373437572736f723a20616c7265616479206578697360448201526a1d1959081858d8dbdd5b9d60aa1b6064820152608401610598565b60408051610140810182528981526000602082015233818301819052606082018a90526080820189905260a0820188905260c0820187905260e0820186905261010082018590526101208201849052600154925163057f4d7960e01b815290926001600160a01b03169063057f4d7990610791908490600401610c3b565b600060405180830381600087803b1580156107ab57600080fd5b505af11580156107bf573d6000803e3d6000fd5b5050505050505050505050505050565b336107e26000546001600160a01b031690565b6001600160a01b0316146108385760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610598565b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b838110156108a557818101518382015260200161088d565b50506000910152565b600081518084526108c681602086016020860161088a565b601f01601f19169290920160200192915050565b60006101408251845260208301516020850152604083015161090760408601826001600160a01b03169052565b50606083015181606086015261091f828601826108ae565b9150506080830151848203608086015261093982826108ae565b91505060a083015184820360a086015261095382826108ae565b91505060c083015184820360c086015261096d82826108ae565b91505060e083015184820360e086015261098782826108ae565b91505061010080840151858303828701526109a283826108ae565b9250505061012080840151858303828701526109be83826108ae565b9695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610a1d57603f19888603018452610a0b8583516108da565b945092850192908501906001016109ef565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610abc57603f19898403018552815160c081518552888201518986015287820151888601526060808301518282880152610a91838801826108ae565b6080858101519089015260a09485015194909701939093525050509386019390860190600101610a51565b509098975050505050505050565b60008060408385031215610add57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715610b2657610b26610aec565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610b5557610b55610aec565b604052919050565b600067ffffffffffffffff821115610b7757610b77610aec565b50601f01601f191660200190565b600082601f830112610b9657600080fd5b8135610ba9610ba482610b5d565b610b2c565b818152846020838601011115610bbe57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610bee57600080fd5b82359150602083013567ffffffffffffffff811115610c0c57600080fd5b610c1885828601610b85565b9150509250929050565b600060208284031215610c3457600080fd5b5035919050565b602081526000610c4e60208301846108da565b9392505050565b6001600160a01b03811681146105aa57600080fd5b600060208284031215610c7c57600080fd5b8135610c4e81610c55565b600080600080600080600080610100898b031215610ca457600080fd5b88359750602089013567ffffffffffffffff80821115610cc357600080fd5b610ccf8c838d01610b85565b985060408b0135915080821115610ce557600080fd5b610cf18c838d01610b85565b975060608b0135915080821115610d0757600080fd5b610d138c838d01610b85565b965060808b0135915080821115610d2957600080fd5b610d358c838d01610b85565b955060a08b0135915080821115610d4b57600080fd5b610d578c838d01610b85565b945060c08b0135915080821115610d6d57600080fd5b610d798c838d01610b85565b935060e08b0135915080821115610d8f57600080fd5b50610d9c8b828c01610b85565b9150509295985092959890939650565b600067ffffffffffffffff821115610dc657610dc6610aec565b5060051b60200190565b8051610ddb81610c55565b919050565b600082601f830112610df157600080fd5b8151610dff610ba482610b5d565b818152846020838601011115610e1457600080fd5b610e2582602083016020870161088a565b949350505050565b60006101408284031215610e4057600080fd5b610e48610b02565b90508151815260208201516020820152610e6460408301610dd0565b6040820152606082015167ffffffffffffffff80821115610e8457600080fd5b610e9085838601610de0565b60608401526080840151915080821115610ea957600080fd5b610eb585838601610de0565b608084015260a0840151915080821115610ece57600080fd5b610eda85838601610de0565b60a084015260c0840151915080821115610ef357600080fd5b610eff85838601610de0565b60c084015260e0840151915080821115610f1857600080fd5b610f2485838601610de0565b60e084015261010091508184015181811115610f3f57600080fd5b610f4b86828701610de0565b838501525061012091508184015181811115610f6657600080fd5b610f7286828701610de0565b8385015250505092915050565b60006020808385031215610f9257600080fd5b825167ffffffffffffffff80821115610faa57600080fd5b818501915085601f830112610fbe57600080fd5b8151610fcc610ba482610dac565b81815260059190911b83018401908481019088831115610feb57600080fd5b8585015b83811015611023578051858111156110075760008081fd5b6110158b89838a0101610e2d565b845250918601918601610fef565b5098975050505050505050565b600060c0828403121561104257600080fd5b60405160c0810167ffffffffffffffff828210818311171561106657611066610aec565b81604052829350845183526020850151602084015260408501516040840152606085015191508082111561109957600080fd5b506110a685828601610de0565b6060830152506080830151608082015260a083015160a08201525092915050565b600060208083850312156110da57600080fd5b825167ffffffffffffffff808211156110f257600080fd5b818501915085601f83011261110657600080fd5b8151611114610ba482610dac565b81815260059190911b8301840190848101908883111561113357600080fd5b8585015b838110156110235780518581111561114f5760008081fd5b61115d8b89838a0101611030565b845250918601918601611137565b60006020828403121561117d57600080fd5b815167ffffffffffffffff81111561119457600080fd5b610e2584828501611030565b6000602082840312156111b257600080fd5b5051919050565b6000602082840312156111cb57600080fd5b815167ffffffffffffffff8111156111e257600080fd5b610e2584828501610e2d565b634e487b7160e01b600052603260045260246000fd5b60006001820161122457634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212204679aa8e00280b36a7bbbe1ea00abb2bbdb5c4193831f1a9fd5cbadb0bf219ba64736f6c63430008110033";

type BusinessControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BusinessControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BusinessController__factory extends ContractFactory {
  constructor(...args: BusinessControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    listBusinessAddress: PromiseOrValue<string>,
    listBusinessApplyAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BusinessController> {
    return super.deploy(
      listBusinessAddress,
      listBusinessApplyAddress,
      overrides || {}
    ) as Promise<BusinessController>;
  }
  override getDeployTransaction(
    listBusinessAddress: PromiseOrValue<string>,
    listBusinessApplyAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      listBusinessAddress,
      listBusinessApplyAddress,
      overrides || {}
    );
  }
  override attach(address: string): BusinessController {
    return super.attach(address) as BusinessController;
  }
  override connect(signer: Signer): BusinessController__factory {
    return super.connect(signer) as BusinessController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BusinessControllerInterface {
    return new utils.Interface(_abi) as BusinessControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BusinessController {
    return new Contract(address, _abi, signerOrProvider) as BusinessController;
  }
}
